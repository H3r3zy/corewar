/*
** take_bit.c for corewar in /home/sahel/rendu/CPE/CPE_2016_corewar/asm
** 
** Made by Sahel Lucas--Saoudi
** Login   <sahel.lucas-saoudi@epitech.eu>
** 
** Started on  Sat Mar 25 14:16:23 2017 Sahel Lucas--Saoudi
** Last update Sun Mar 26 14:49:49 2017 Sahel Lucas--Saoudi
*/

#include <stdlib.h>
#include "op.h"
#include "my.h"

char	transfo(char coding_game[4])
{
  coding
}

void	set_byte(t_line *line)
{
  int	i;
  int	is_idx;
  int	have_cb;
  char	coding_byte[4];

  line->bytes = 1;
  i = 0;
  is_idx = 0;
  have_cb = 0;
  if (match(line->op.mnemonique, "sti"))
    is_idx = 1;
  if (!match(line->op.mnemonique, "live") && !match(line->op.mnemonique, "zjmp") &&
      !match(line->op.mnemonique, "fork") && !match(line->op.mnemonique, "lfork"))
    {
      line->bytes += 1;
      have_cb = 1;
    }
  while (i < MAX_ARGS_NUMBER)
    {
      if (line->arg[i] && line->arg[i][0] == 'r')
	{
	  coding_byte[i] = 01;
	  line->bytes += 1;
	}
      else if (line->arg[i] && match(line->arg[i], "%*"))
	{
	  coding_byte[i] = 11;
	  line->bytes += (is_idx == 0) ? (IND_SIZE) : (2);
	}
      else if (line->arg[i] && ((line->arg[i][0] >= '0' && line->arg[i][0] <= '9')
				|| line->arg[i][0] == '-'))
	{
	  coding_byte[i] = 10;
	  line->bytes += (is_idx == 0) ? (DIR_SIZE) : (2);
	}
      else
	coding_byte[i] = 00;
      i++;
    }
  line->write = malloc(sizeof(line->bytes + 1));
  int j = 1;
  write[0] = line->op.code;
  if (have_cb == 1)
    {
      write[j] = transfo(coding_byte);
    }
}

int	main()
{
  t_line	*l;

  l = malloc(sizeof(t_line));
  l->arg = malloc(sizeof(char *) * (4));
  l->arg[0] = "r1";
  l->arg[1] = "%:live";
  l->arg[2] = "%1";
  l->arg[3] = NULL;
  l->op = op_tab[10];
  set_byte(l);
  printf("%d\n", l->byte);
}
